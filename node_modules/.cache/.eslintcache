[{"/home/asvin/workspace/react/router/src/index.js":"1","/home/asvin/workspace/react/router/src/components/App.js":"2","/home/asvin/workspace/react/router/src/reducers/index.js":"3","/home/asvin/workspace/react/router/src/history.js":"4","/home/asvin/workspace/react/router/src/components/PostList.js":"5","/home/asvin/workspace/react/router/src/components/PostCreate.js":"6","/home/asvin/workspace/react/router/src/components/PostEdit.js":"7","/home/asvin/workspace/react/router/src/components/Header.js":"8","/home/asvin/workspace/react/router/src/components/Loader.js":"9","/home/asvin/workspace/react/router/src/components/Public.js":"10","/home/asvin/workspace/react/router/src/components/private.js":"11","/home/asvin/workspace/react/router/src/components/Form.js":"12","/home/asvin/workspace/react/router/src/actions/index.js":"13","/home/asvin/workspace/react/router/src/service.js":"14","/home/asvin/workspace/react/router/src/jsonserver.js":"15"},{"size":653,"mtime":1668056575000,"results":"16","hashOfConfig":"17"},{"size":1465,"mtime":1668599512222,"results":"18","hashOfConfig":"17"},{"size":2006,"mtime":1668593360000,"results":"19","hashOfConfig":"17"},{"size":87,"mtime":1667987564000,"results":"20","hashOfConfig":"17"},{"size":3766,"mtime":1668425124000,"results":"21","hashOfConfig":"17"},{"size":911,"mtime":1668583968000,"results":"22","hashOfConfig":"17"},{"size":1110,"mtime":1668583916000,"results":"23","hashOfConfig":"17"},{"size":2421,"mtime":1668594109000,"results":"24","hashOfConfig":"17"},{"size":134,"mtime":1668583456000,"results":"25","hashOfConfig":"17"},{"size":207,"mtime":1668581794000,"results":"26","hashOfConfig":"17"},{"size":369,"mtime":1668599469809,"results":"27","hashOfConfig":"17"},{"size":2401,"mtime":1668061727000,"results":"28","hashOfConfig":"17"},{"size":3157,"mtime":1668061824000,"results":"29","hashOfConfig":"17"},{"size":393,"mtime":1668061841000,"results":"30","hashOfConfig":"17"},{"size":151,"mtime":1668598455691,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"1tioixa",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/asvin/workspace/react/router/src/index.js",["87"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\nconst el = document.querySelector('#root');\r\nconst root = ReactDOM.createRoot(el);\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancer(applyMiddleware(thunk)));\r\nroot.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n","/home/asvin/workspace/react/router/src/components/App.js",["88"],[],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport PostList from './PostList';\r\nimport PostCreate from './PostCreate';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport history from '../history';\r\nimport PostEdit from './PostEdit';\r\nimport Header from './Header';\r\nimport PublicRoute from './Public';\r\nimport PrivateRoute from './private';\r\nimport _ from 'lodash';\r\nimport Loader from './Loader';\r\nimport './index.css';\r\n\r\nconst App = ({ auth }) => {\r\n  const { signin } = auth;\r\n  return (\r\n    <div className='container'>\r\n      <ToastContainer />\r\n      <Header />\r\n      {_.isNull(signin) ? (\r\n        <Loader />\r\n      ) : (\r\n        <Router history={history}>\r\n          {/* <PublicRoute path=\"/\" component={PostList} exact /> */}\r\n          <PublicRoute\r\n            path=\"/\"\r\n            exact\r\n            isAuthenticated={signin}\r\n            component={PostList}\r\n          ></PublicRoute>\r\n          <PrivateRoute path=\"/add\" isAuthenticated={signin}>\r\n            <PostCreate />\r\n          </PrivateRoute>\r\n          <PrivateRoute path=\"/edit/:id\" isAuthenticated={signin}>\r\n            <PostEdit />\r\n          </PrivateRoute>\r\n        </Router>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { posts: state.posts, auth: state.auth };\r\n};\r\nexport default connect(mapStateToProps)(App);\r\n","/home/asvin/workspace/react/router/src/reducers/index.js",["89","90"],[],"import { combineReducers } from 'redux';\r\nconst initialState = {\r\n  data: [],\r\n  loadingData: false,\r\n  showForm: false,\r\n  addPostLoading: false,\r\n  onEditLoading: false,\r\n  selectedPostId: null,\r\n  selectedPostdetails: null,\r\n  onDeleteLoading: false,\r\n  successMessage: null,\r\n};\r\n\r\nconst auth = {\r\n  signin: null,\r\n  googleId: '',\r\n  mail: '',\r\n};\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING_EDIT_POST':\r\n      return {\r\n        ...state,\r\n        onEditLoading: action.payload,\r\n      };\r\n    case 'SET_SUCCESS_MESSAGE':\r\n      return {\r\n        ...state,\r\n        successMessage: action.payload,\r\n      };\r\n    case 'SET_LOADING_DELETE_POST':\r\n      return {\r\n        ...state,\r\n        onDeleteLoading: action.payload,\r\n      };\r\n    case 'SET_EDIT_POST_ID':\r\n      return {\r\n        ...state,\r\n        selectedPostId: action.payload,\r\n      };\r\n    case 'SET_SELECTED_POST_DETAILS':\r\n      return {\r\n        ...state,\r\n        selectedPostdetails: action.payload,\r\n      };\r\n    case 'SET_LOADING_DATA':\r\n      return {\r\n        ...state,\r\n        loadingData: action.payload,\r\n      };\r\n    case 'SET_LOADING_ADD-POST':\r\n      return {\r\n        ...state,\r\n        addPostLoading: action.payload,\r\n      };\r\n    case 'SET_POSTS':\r\n      return {\r\n        ...state,\r\n        data: [...action.payload],\r\n      };\r\n    case 'SET_FORM':\r\n      return {\r\n        ...state,\r\n        showForm: action.payload,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst authReducer = (state = auth, action) => {\r\n  switch (action.type) {\r\n    case 'sign-in':\r\n      return {\r\n        ...state,\r\n        signin: action.payload,\r\n      };\r\n    case 'sign-in-id':\r\n      return {\r\n        ...state,\r\n        googleId: action.payload,\r\n      };\r\n    case 'sign-in-mail':\r\n      return {\r\n        ...state,\r\n        mail: action.payload,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  auth: authReducer,\r\n});\r\n","/home/asvin/workspace/react/router/src/history.js",[],[],"/home/asvin/workspace/react/router/src/components/PostList.js",["91","92","93"],[],"import React, { useEffect, useState } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport { connect } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  setPosts,\r\n  showForm,\r\n  addPost,\r\n  getPost,\r\n  cancelForm,\r\n  editPost,\r\n  deletePost,\r\n} from '../actions';\r\nimport moment from 'moment/moment';\r\nimport Form from './Form';\r\nModal.setAppElement('#root');\r\n\r\nconst PostList = ({\r\n  signin,\r\n  posts,\r\n  setPosts,\r\n  addPost,\r\n  getPost,\r\n  cancelForm,\r\n  editPost,\r\n  deletePost,\r\n  ...rest\r\n}) => {\r\n  console.log(signin.auth.signin);\r\n  const columns = [\r\n    {\r\n      name: 'Name',\r\n      selector: (row) => row.id,\r\n    },\r\n    {\r\n      name: 'Title',\r\n      selector: (row) => row.title,\r\n    },\r\n    {\r\n      name: 'Description',\r\n      selector: (row) => row.body,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'caretedDated',\r\n      selector: (row) => moment(row.createdAt).format('YYYY-MM-DD'),\r\n    },\r\n\r\n    {\r\n      name: signin.auth.signin ? 'Acion' : null,\r\n      selector: (row) => (\r\n        <div>\r\n          {signin.auth.signin ? (\r\n            <Link className=\"btn btn-warning\" to={`/edit/${row.id}`}>\r\n              Edit\r\n            </Link>\r\n          ) : null}\r\n          {signin.auth.signin ? (\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => onDeleteModal(row)}\r\n            >\r\n              Delete{' '}\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const [deleteModalConfig, setDeleteModalConfig] = useState({\r\n    showModal: false,\r\n    deleteId: null,\r\n  });\r\n  const onDeleteModal = (row) => {\r\n    setDeleteModalConfig({\r\n      showModal: true,\r\n      deleteId: row.id,\r\n    });\r\n  };\r\n  const onCloseModal = () => {\r\n    setDeleteModalConfig({\r\n      showModal: false,\r\n      deleteId: null,\r\n    });\r\n  };\r\n\r\n  const onDeleteConfirm = (row) => {\r\n    deletePost(deleteModalConfig.deleteId);\r\n  };\r\n  useEffect(() => {\r\n    setPosts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!posts.onDeleteLoading) {\r\n      setDeleteModalConfig({\r\n        showModal: false,\r\n        deleteId: null,\r\n      });\r\n    }\r\n  }, [posts.onDeleteLoading]);\r\n  const onFormSubmit = (data) => {\r\n    if (posts.selectedPostId) {\r\n      editPost(posts.selectedPostId, {\r\n        title: data.title,\r\n        body: data.description,\r\n        updatedAt: new Date().getTime(),\r\n      });\r\n    } else {\r\n      addPost({\r\n        title: data.title,\r\n        body: data.description,\r\n        createdAt: new Date().getTime(),\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"header d-flex justify-content-between align -item-center\">\r\n        <h1>POSTS</h1>\r\n        <Modal\r\n          isOpen={deleteModalConfig.showModal}\r\n          contentLabel=\"Minimal Modal Example\"\r\n        >\r\n          <button onClick={() => onCloseModal()}>Close Modal</button>\r\n\r\n          <button className=\"btn btn-warning\" onClick={() => onDeleteConfirm()}>\r\n            Confirm{' '}\r\n            {posts.onDeleteLoading ? (\r\n              <i className=\"bi bi-ubuntu\">loading</i>\r\n            ) : null}\r\n          </button>\r\n        </Modal>\r\n\r\n        <Link className=\"btn btn-primary\" to={'/add'}>\r\n          Add Post\r\n        </Link>\r\n      </div>\r\n\r\n      <DataTable\r\n        columns={columns}\r\n        data={posts.data}\r\n        pagination\r\n        progressPending={posts.loadingData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { posts: state.posts, signin: state };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setPosts,\r\n  showForm,\r\n  addPost,\r\n  getPost,\r\n  cancelForm,\r\n  editPost,\r\n  deletePost,\r\n})(PostList);\r\n","/home/asvin/workspace/react/router/src/components/PostCreate.js",[],[],"/home/asvin/workspace/react/router/src/components/PostEdit.js",["94","95"],[],"import React, { useEffect, useState } from 'react';\n\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { editPost, cancelForm, getPost } from '../actions';\n\nimport Form from './Form';\n\nconst PostEdit = ({ posts, cancelForm, editPost, getPost, ...rest }) => {\n  const params = useParams();\n  const postId = params.id;\n  const onFormSubmit = (data) => {\n    editPost(posts.selectedPostId, {\n      title: data.title,\n      body: data.description,\n      updatedAt: new Date().getTime(),\n    });\n  };\n  useEffect(() => {\n    getPost(postId);\n  }, []);\n\n  return (\n    <div>\n      <div className=\"header d-flex justify-content-between align -item-center\">\n        <h1>Edit Post</h1>\n      </div>\n\n      <Form\n        onFormSubmit={onFormSubmit}\n        selectedPostdetails={posts.selectedPostdetails}\n        oncancel={cancelForm}\n        onSubmitloading={posts.addPostLoading}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { posts: state.posts };\n};\n\nexport default connect(mapStateToProps, {\n  cancelForm,\n  editPost,\n  getPost,\n})(PostEdit);\n","/home/asvin/workspace/react/router/src/components/Header.js",["96"],[],"import React, { useState, useEffect } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { gapi } from 'gapi-script';\nimport { connect } from 'react-redux';\nimport { signin } from '../actions';\n\nfunction Header({ posts, signin }) {\n  console.log(posts.auth);\n  const [profile, setProfile] = useState([]);\n  const clientId =\n    '1091196006174-27spvg8d6ktqsc6o1ilqlvttbuo2o3f2.apps.googleusercontent.com';\n  useEffect(() => {\n    // debugger;\n    const initClient = () => {\n      gapi.client\n        .init({\n          clientId: clientId,\n          scope: '',\n        })\n        .then(() => {\n          setTimeout(() => {\n            if (!gapi.auth2.getAuthInstance().isSignedIn.get()) {\n              // debugger;\n              signin(false, null, null);\n              setProfile(null);\n            }\n          }, 1000);\n          gapi.auth2.getAuthInstance();\n          // console.log(\n          //   'gapi.auth2.getAuthInstance().isSignedIn.get()',\n          //   gapi.auth2.getAuthInstance().isSignedIn.get()\n          // );\n          //if (!gapi.auth2.getAuthInstance().isSignedIn.get()) {\n          // signin(false, null, null);\n          // setProfile(null);\n          // } else {\n          // debugger;\n          // }\n        });\n    };\n    gapi.load('client:auth2', initClient);\n  }, []);\n\n  const onSuccess = (res) => {\n    debugger;\n    signin(true, res.profileObj.googleId, res.profileObj.email);\n    setProfile(res.profileObj);\n  };\n\n  const onFailure = (err) => {\n    debugger;\n    console.log('failed', err);\n  };\n\n  const logOut = () => {\n    // debugger;\n    debugger;\n    signin(false, null, null);\n    setProfile(null);\n  };\n\n  return (\n    <div>\n      <h2>React Google Login</h2>\n      <br />\n      <br />\n      {profile && posts.auth.signin === true ? (\n        <div>\n          <h3>User Logged in</h3>\n\n          <GoogleLogout\n            clientId={clientId}\n            buttonText=\"Log out\"\n            onLogoutSuccess={logOut}\n          />\n        </div>\n      ) : (\n        <GoogleLogin\n          clientId={clientId}\n          buttonText=\"Sign in with Google\"\n          onSuccess={onSuccess}\n          onFailure={onFailure}\n          cookiePolicy={'single_host_origin'}\n          isSignedIn={true}\n        />\n      )}\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return { posts: state };\n};\n\nexport default connect(mapStateToProps, { signin })(Header);\n","/home/asvin/workspace/react/router/src/components/Loader.js",[],[],"/home/asvin/workspace/react/router/src/components/Public.js",["97"],[],"import { Route, Redirect } from 'react-router-dom';\nimport React from 'react';\n\nconst PublicRoute = ({ children, isAuthenticated, ...rest }) => {\n  return <Route {...rest} />;\n};\nexport default PublicRoute;\n","/home/asvin/workspace/react/router/src/components/private.js",[],[],"/home/asvin/workspace/react/router/src/components/Form.js",["98"],[],"import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\n\r\nconst Form = ({\r\n  onFormSubmit,\r\n  selectedPostdetails,\r\n  oncancel,\r\n  onSubmitloading,\r\n}) => {\r\n  useEffect(() => {\r\n    if (selectedPostdetails) {\r\n      setFieldValue('title', selectedPostdetails.title);\r\n      setFieldValue('description', selectedPostdetails.body);\r\n    }\r\n  }, [selectedPostdetails]);\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.title) {\r\n      errors.title = 'Title Required';\r\n    }\r\n\r\n    if (!values.description) {\r\n      errors.description = 'Description Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const {\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    touched,\r\n    values, // use this if you want controlled components\r\n    errors,\r\n    setFieldValue,\r\n  } = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      description: '',\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      onFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"title\"\r\n            name=\"title\"\r\n            value={values.title}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n          />\r\n        </div>\r\n        <p>\r\n          {' '}\r\n          {touched.title && errors.title ? <span>{errors.title}</span> : null}\r\n        </p>\r\n        <div className=\"form-group\">\r\n          <label>Description</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            value={values.description}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n          ></textarea>\r\n          <p>\r\n            {' '}\r\n            {touched.description && errors.description ? (\r\n              <span>{errors.description}</span>\r\n            ) : null}\r\n          </p>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit{' '}\r\n          {onSubmitloading ? <i className=\"bi bi-ubuntu\">loading</i> : null}\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-light\" onClick={oncancel}>\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","/home/asvin/workspace/react/router/src/actions/index.js",["99","100","101"],[],"import PostService from '../service';\r\nimport history from '../history';\r\nexport const setPosts = () => async (dispatch) => {\r\n  dispatch(loadingPosts(true));\r\n  await new Promise((res) => setTimeout(res, 1000));\r\n  const { data } = await PostService.listPosts();\r\n  dispatch({\r\n    type: 'SET_POSTS',\r\n    payload: data,\r\n  });\r\n  dispatch(loadingPosts(false));\r\n};\r\n\r\nexport const loadingPosts = (payload) => {\r\n  return {\r\n    type: 'SET_LOADING_DATA',\r\n    payload: payload,\r\n  };\r\n};\r\nexport const addPostLoading = (payload) => {\r\n  return {\r\n    type: 'SET_LOADING_ADD-POST',\r\n    payload: payload,\r\n  };\r\n};\r\nexport const showForm = (payload) => {\r\n  return {\r\n    type: 'SET_FORM',\r\n    payload,\r\n  };\r\n};\r\nexport const addPost = (payload) => async (dispatch) => {\r\n  dispatch(addPostLoading(true));\r\n  await new Promise((res) => setTimeout(res, 1000));\r\n  const { data } = await PostService.createPost(payload);\r\n\r\n  dispatch(addPostLoading(false));\r\n  history.push('/');\r\n  dispatch(showForm(false));\r\n  dispatch(setSuccessMessage('Add post successfully'));\r\n  dispatch(setPosts());\r\n};\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  dispatch({ type: 'SET_LOADING_EDIT_POST', payload: true });\r\n  dispatch({ type: 'SET_EDIT_POST_ID', payload: id });\r\n  await new Promise((res) => setTimeout(res, 1000));\r\n  const { data } = await PostService.getPostDetails(id);\r\n\r\n  dispatch({ type: 'SET_SELECTED_POST_DETAILS', payload: data });\r\n  dispatch({ type: 'SET_LOADING_EDIT_POST', payload: false });\r\n  dispatch(showForm(true));\r\n};\r\nexport const editPost = (id, payload) => async (dispatch) => {\r\n  dispatch({ type: 'SET_LOADING_ADD_POST', payload: true });\r\n  dispatch({ type: 'SET_EDIT_POST_ID', payload: id });\r\n  await new Promise((res) => setTimeout(res, 1000));\r\n  const { data } = await PostService.updatePost(id, payload);\r\n\r\n  dispatch({ type: 'SET_LOADING_ADD_POST', payload: false });\r\n  dispatch(cancelForm());\r\n  history.push('/');\r\n  dispatch(setSuccessMessage('Edit post successfully'));\r\n  dispatch(setPosts());\r\n};\r\nexport const cancelForm = () => (dispatch) => {\r\n  dispatch(showForm(false));\r\n  history.push('/');\r\n  dispatch({ type: 'SET_EDIT_POST_ID', payload: null });\r\n  dispatch({ type: 'SET_SELECTED_POST_DETAILS', payload: null });\r\n};\r\n\r\nexport const setSuccessMessage = (payload) => ({\r\n  type: 'SET_SUCCESS_MESSAGE',\r\n  payload,\r\n});\r\n\r\nexport const resetSuccessMessage = () => ({\r\n  type: 'SET_SUCCESS_MESSAGE',\r\n  payload: null,\r\n});\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  dispatch({ type: 'SET_LOADING_DELETE_POST', payload: true });\r\n  dispatch({ type: 'SET_EDIT_POST_ID', payload: id });\r\n  await new Promise((res) => setTimeout(res, 1000));\r\n  const { data } = await PostService.deletePost(id);\r\n\r\n  dispatch({ type: 'SET_LOADING_DELETE_POST', payload: false });\r\n  dispatch(setSuccessMessage('Delete post successfully'));\r\n  dispatch(setPosts());\r\n};\r\n\r\nexport const signin = (payload, id, mail) => async (dispatch) => {\r\n  dispatch({ type: 'sign-in', payload: payload });\r\n  dispatch({ type: 'sign-in-id', payload: id });\r\n  dispatch({ type: 'sign-in-mail', payload: mail });\r\n};\r\n","/home/asvin/workspace/react/router/src/service.js",["102"],[],"import jsonserver from './jsonserver';\r\n\r\nexport default {\r\n  //List\r\n  listPosts: () => jsonserver.get('posts'),\r\n  //Create\r\n  createPost: (data) => jsonserver.post('posts', data),\r\n  //update\r\n  updatePost: (id, data) => jsonserver.put(`posts/${id}`, data),\r\n  //delete\r\n  deletePost: (id) => jsonserver.delete(`posts/${id}`),\r\n  getPostDetails: (id) => jsonserver.get(`posts/${id}`),\r\n};\r\n","/home/asvin/workspace/react/router/src/jsonserver.js",[],[],{"ruleId":"103","severity":1,"message":"104","line":8,"column":10,"nodeType":"105","messageId":"106","endLine":8,"endColumn":21},{"ruleId":"103","severity":1,"message":"107","line":3,"column":18,"nodeType":"105","messageId":"106","endLine":3,"endColumn":23},{"ruleId":"108","severity":1,"message":"109","line":20,"column":3,"nodeType":"110","messageId":"111","endLine":66,"endColumn":4},{"ruleId":"108","severity":1,"message":"109","line":71,"column":3,"nodeType":"110","messageId":"111","endLine":87,"endColumn":4},{"ruleId":"103","severity":1,"message":"112","line":16,"column":8,"nodeType":"105","messageId":"106","endLine":16,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":95,"column":6,"nodeType":"115","endLine":95,"endColumn":8,"suggestions":"116"},{"ruleId":"103","severity":1,"message":"117","line":105,"column":9,"nodeType":"105","messageId":"106","endLine":105,"endColumn":21},{"ruleId":"103","severity":1,"message":"118","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"119","line":21,"column":6,"nodeType":"115","endLine":21,"endColumn":8,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"121","line":42,"column":6,"nodeType":"115","endLine":42,"endColumn":8,"suggestions":"122"},{"ruleId":"103","severity":1,"message":"123","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"124","line":15,"column":6,"nodeType":"115","endLine":15,"endColumn":27,"suggestions":"125"},{"ruleId":"103","severity":1,"message":"126","line":35,"column":11,"nodeType":"105","messageId":"106","endLine":35,"endColumn":15},{"ruleId":"103","severity":1,"message":"126","line":58,"column":11,"nodeType":"105","messageId":"106","endLine":58,"endColumn":15},{"ruleId":"103","severity":1,"message":"126","line":86,"column":11,"nodeType":"105","messageId":"106","endLine":86,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":3,"column":1,"nodeType":"129","endLine":13,"endColumn":3},"no-unused-vars","'GoogleLogin' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPosts'. Either include it or remove the dependency array. If 'setPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["130"],"'onFormSubmit' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getPost' and 'postId'. Either include them or remove the dependency array. If 'getPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["131"],"React Hook useEffect has a missing dependency: 'signin'. Either include it or remove the dependency array. If 'signin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["132"],"'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'setFieldValue'. Either include it or remove the dependency array.",["133"],"'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [setPosts]",{"range":"142","text":"143"},"Update the dependencies array to be: [getPost, postId]",{"range":"144","text":"145"},"Update the dependencies array to be: [signin]",{"range":"146","text":"147"},"Update the dependencies array to be: [selectedPostdetails, setFieldValue]",{"range":"148","text":"149"},[2073,2075],"[setPosts]",[584,586],"[getPost, postId]",[1325,1327],"[signin]",[368,389],"[selectedPostdetails, setFieldValue]"]