{"ast":null,"code":"import PostService from '../service';\nimport history from '../history';\nexport const setPosts = () => async dispatch => {\n  dispatch(loadingPosts(true));\n  await new Promise(res => setTimeout(res, 1000));\n  const {\n    data\n  } = await PostService.listPosts();\n  dispatch({\n    type: 'SET_POSTS',\n    payload: data\n  });\n  dispatch(loadingPosts(false));\n};\nexport const loadingPosts = payload => {\n  return {\n    type: 'SET_LOADING_DATA',\n    payload: payload\n  };\n};\nexport const addPostLoading = payload => {\n  return {\n    type: 'SET_LOADING_ADD-POST',\n    payload: payload\n  };\n};\nexport const showForm = payload => {\n  return {\n    type: 'SET_FORM',\n    payload\n  };\n};\nexport const addPost = payload => async dispatch => {\n  dispatch(addPostLoading(true));\n  await new Promise(res => setTimeout(res, 1000));\n  const {\n    data\n  } = await PostService.createPost(payload);\n  dispatch(addPostLoading(false));\n  history.push('/');\n  dispatch(showForm(false));\n  dispatch(setSuccessMessage('Add post successfully'));\n  dispatch(setPosts());\n};\nexport const getPost = id => async dispatch => {\n  dispatch({\n    type: 'SET_LOADING_EDIT_POST',\n    payload: true\n  });\n  dispatch({\n    type: 'SET_EDIT_POST_ID',\n    payload: id\n  });\n  await new Promise(res => setTimeout(res, 1000));\n  const {\n    data\n  } = await PostService.getPostDetails(id);\n  dispatch({\n    type: 'SET_SELECTED_POST_DETAILS',\n    payload: data\n  });\n  dispatch({\n    type: 'SET_LOADING_EDIT_POST',\n    payload: false\n  });\n  dispatch(showForm(true));\n};\nexport const editPost = (id, payload) => async dispatch => {\n  dispatch({\n    type: 'SET_LOADING_ADD_POST',\n    payload: true\n  });\n  dispatch({\n    type: 'SET_EDIT_POST_ID',\n    payload: id\n  });\n  await new Promise(res => setTimeout(res, 1000));\n  const {\n    data\n  } = await PostService.updatePost(id, payload);\n  dispatch({\n    type: 'SET_LOADING_ADD_POST',\n    payload: false\n  });\n  dispatch(cancelForm());\n  history.push('/');\n  dispatch(setSuccessMessage('Edit post successfully'));\n  dispatch(setPosts());\n};\nexport const cancelForm = () => dispatch => {\n  dispatch(showForm(false));\n  history.push('/');\n  dispatch({\n    type: 'SET_EDIT_POST_ID',\n    payload: null\n  });\n  dispatch({\n    type: 'SET_SELECTED_POST_DETAILS',\n    payload: null\n  });\n};\nexport const setSuccessMessage = payload => ({\n  type: 'SET_SUCCESS_MESSAGE',\n  payload\n});\nexport const resetSuccessMessage = () => ({\n  type: 'SET_SUCCESS_MESSAGE',\n  payload: null\n});\nexport const deletePost = id => async dispatch => {\n  dispatch({\n    type: 'SET_LOADING_DELETE_POST',\n    payload: true\n  });\n  dispatch({\n    type: 'SET_EDIT_POST_ID',\n    payload: id\n  });\n  await new Promise(res => setTimeout(res, 1000));\n  const {\n    data\n  } = await PostService.deletePost(id);\n  dispatch({\n    type: 'SET_LOADING_DELETE_POST',\n    payload: false\n  });\n  dispatch(setSuccessMessage('Delete post successfully'));\n  dispatch(setPosts());\n};\nexport const signin = (payload, id, mail) => async dispatch => {\n  dispatch({\n    type: 'sign-in',\n    payload: payload\n  });\n  dispatch({\n    type: 'sign-in-id',\n    payload: id\n  });\n  dispatch({\n    type: 'sign-in-mail',\n    payload: mail\n  });\n};","map":{"version":3,"names":["PostService","history","setPosts","dispatch","loadingPosts","Promise","res","setTimeout","data","listPosts","type","payload","addPostLoading","showForm","addPost","createPost","push","setSuccessMessage","getPost","id","getPostDetails","editPost","updatePost","cancelForm","resetSuccessMessage","deletePost","signin","mail"],"sources":["/home/asvin/workspace/react/router/src/actions/index.js"],"sourcesContent":["import PostService from '../service';\r\nimport history from '../history';\r\nexport const setPosts = () => async (dispatch) => {\r\n  dispatch(loadingPosts(true));\r\n  await new Promise((res) => setTimeout(res, 1000));\r\n  const { data } = await PostService.listPosts();\r\n  dispatch({\r\n    type: 'SET_POSTS',\r\n    payload: data,\r\n  });\r\n  dispatch(loadingPosts(false));\r\n};\r\n\r\nexport const loadingPosts = (payload) => {\r\n  return {\r\n    type: 'SET_LOADING_DATA',\r\n    payload: payload,\r\n  };\r\n};\r\nexport const addPostLoading = (payload) => {\r\n  return {\r\n    type: 'SET_LOADING_ADD-POST',\r\n    payload: payload,\r\n  };\r\n};\r\nexport const showForm = (payload) => {\r\n  return {\r\n    type: 'SET_FORM',\r\n    payload,\r\n  };\r\n};\r\nexport const addPost = (payload) => async (dispatch) => {\r\n  dispatch(addPostLoading(true));\r\n  await new Promise((res) => setTimeout(res, 1000));\r\n  const { data } = await PostService.createPost(payload);\r\n\r\n  dispatch(addPostLoading(false));\r\n  history.push('/');\r\n  dispatch(showForm(false));\r\n  dispatch(setSuccessMessage('Add post successfully'));\r\n  dispatch(setPosts());\r\n};\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  dispatch({ type: 'SET_LOADING_EDIT_POST', payload: true });\r\n  dispatch({ type: 'SET_EDIT_POST_ID', payload: id });\r\n  await new Promise((res) => setTimeout(res, 1000));\r\n  const { data } = await PostService.getPostDetails(id);\r\n\r\n  dispatch({ type: 'SET_SELECTED_POST_DETAILS', payload: data });\r\n  dispatch({ type: 'SET_LOADING_EDIT_POST', payload: false });\r\n  dispatch(showForm(true));\r\n};\r\nexport const editPost = (id, payload) => async (dispatch) => {\r\n  dispatch({ type: 'SET_LOADING_ADD_POST', payload: true });\r\n  dispatch({ type: 'SET_EDIT_POST_ID', payload: id });\r\n  await new Promise((res) => setTimeout(res, 1000));\r\n  const { data } = await PostService.updatePost(id, payload);\r\n\r\n  dispatch({ type: 'SET_LOADING_ADD_POST', payload: false });\r\n  dispatch(cancelForm());\r\n  history.push('/');\r\n  dispatch(setSuccessMessage('Edit post successfully'));\r\n  dispatch(setPosts());\r\n};\r\nexport const cancelForm = () => (dispatch) => {\r\n  dispatch(showForm(false));\r\n  history.push('/');\r\n  dispatch({ type: 'SET_EDIT_POST_ID', payload: null });\r\n  dispatch({ type: 'SET_SELECTED_POST_DETAILS', payload: null });\r\n};\r\n\r\nexport const setSuccessMessage = (payload) => ({\r\n  type: 'SET_SUCCESS_MESSAGE',\r\n  payload,\r\n});\r\n\r\nexport const resetSuccessMessage = () => ({\r\n  type: 'SET_SUCCESS_MESSAGE',\r\n  payload: null,\r\n});\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  dispatch({ type: 'SET_LOADING_DELETE_POST', payload: true });\r\n  dispatch({ type: 'SET_EDIT_POST_ID', payload: id });\r\n  await new Promise((res) => setTimeout(res, 1000));\r\n  const { data } = await PostService.deletePost(id);\r\n\r\n  dispatch({ type: 'SET_LOADING_DELETE_POST', payload: false });\r\n  dispatch(setSuccessMessage('Delete post successfully'));\r\n  dispatch(setPosts());\r\n};\r\n\r\nexport const signin = (payload, id, mail) => async (dispatch) => {\r\n  dispatch({ type: 'sign-in', payload: payload });\r\n  dispatch({ type: 'sign-in-id', payload: id });\r\n  dispatch({ type: 'sign-in-mail', payload: mail });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}