{"ast":null,"code":"var _jsxFileName = \"/home/asvin/workspace/react/router/src/components/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Router, Route } from 'react-router-dom';\nimport PostList from './PostList';\nimport PostCreate from './PostCreate';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport history from '../history';\nimport PostEdit from './PostEdit';\nimport Header from './Header';\nimport PublicRoute from './Public';\nimport PrivateRoute from './private';\nimport _ from 'lodash';\nimport Loader from './Loader';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = _ref => {\n  let {\n    auth\n  } = _ref;\n  const {\n    signin\n  } = auth;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), _.isNull(signin) ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Router, {\n      history: history,\n      children: [/*#__PURE__*/_jsxDEV(PublicRoute, {\n        path: \"/\",\n        exact: true,\n        isAuthenticated: signin,\n        component: PostList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/add\",\n        isAuthenticated: signin,\n        children: /*#__PURE__*/_jsxDEV(PostCreate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/edit/:id\",\n        isAuthenticated: signin,\n        children: /*#__PURE__*/_jsxDEV(PostEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    auth: state.auth\n  };\n};\nexport default connect(mapStateToProps)(App);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","connect","Router","Route","PostList","PostCreate","ToastContainer","history","PostEdit","Header","PublicRoute","PrivateRoute","_","Loader","App","auth","signin","isNull","mapStateToProps","state","posts"],"sources":["/home/asvin/workspace/react/router/src/components/App.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport PostList from './PostList';\r\nimport PostCreate from './PostCreate';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport history from '../history';\r\nimport PostEdit from './PostEdit';\r\nimport Header from './Header';\r\nimport PublicRoute from './Public';\r\nimport PrivateRoute from './private';\r\nimport _ from 'lodash';\r\nimport Loader from './Loader';\r\nimport './index.css';\r\n\r\nconst App = ({ auth }) => {\r\n  const { signin } = auth;\r\n  return (\r\n    <div className=''>\r\n      <ToastContainer />\r\n      <Header />\r\n      {_.isNull(signin) ? (\r\n        <Loader />\r\n      ) : (\r\n        <Router history={history}>\r\n          {/* <PublicRoute path=\"/\" component={PostList} exact /> */}\r\n          <PublicRoute\r\n            path=\"/\"\r\n            exact\r\n            isAuthenticated={signin}\r\n            component={PostList}\r\n          ></PublicRoute>\r\n          <PrivateRoute path=\"/add\" isAuthenticated={signin}>\r\n            <PostCreate />\r\n          </PrivateRoute>\r\n          <PrivateRoute path=\"/edit/:id\" isAuthenticated={signin}>\r\n            <PostEdit />\r\n          </PrivateRoute>\r\n        </Router>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { posts: state.posts, auth: state.auth };\r\n};\r\nexport default connect(mapStateToProps)(App);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAC9C,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,UAAU;AAClC,OAAOC,YAAY,MAAM,WAAW;AACpC,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,aAAa;AAAC;AAErB,MAAMC,GAAG,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACnB,MAAM;IAAEC;EAAO,CAAC,GAAGD,IAAI;EACvB,oBACE;IAAK,SAAS,EAAC,EAAE;IAAA,wBACf,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAClB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,EACTH,CAAC,CAACK,MAAM,CAACD,MAAM,CAAC,gBACf,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEV,QAAC,MAAM;MAAC,OAAO,EAAET,OAAQ;MAAA,wBAEvB,QAAC,WAAW;QACV,IAAI,EAAC,GAAG;QACR,KAAK;QACL,eAAe,EAAES,MAAO;QACxB,SAAS,EAAEZ;MAAS;QAAA;QAAA;QAAA;MAAA,QACP,eACf,QAAC,YAAY;QAAC,IAAI,EAAC,MAAM;QAAC,eAAe,EAAEY,MAAO;QAAA,uBAChD,QAAC,UAAU;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACD,eACf,QAAC,YAAY;QAAC,IAAI,EAAC,WAAW;QAAC,eAAe,EAAEA,MAAO;QAAA,uBACrD,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QAElB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,KA3BIF,GAAG;AA4BT,MAAMI,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAO;IAAEC,KAAK,EAAED,KAAK,CAACC,KAAK;IAAEL,IAAI,EAAEI,KAAK,CAACJ;EAAK,CAAC;AACjD,CAAC;AACD,eAAed,OAAO,CAACiB,eAAe,CAAC,CAACJ,GAAG,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}